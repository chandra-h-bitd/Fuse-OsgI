<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
       xmlns:jaxrs="http://cxf.apache.org/blueprint/jaxrs"
       xmlns:cxf="http://cxf.apache.org/blueprint/core"
       xmlns:camel="http://camel.apache.org/schema/blueprint"
       xmlns:httpj="http://cxf.apache.org/transports/http-jetty/configuration"
       xmlns:http="http://cxf.apache.org/transports/http/configuration"
       xmlns:sec="http://cxf.apache.org/configuration/security"
       xmlns:camelcxf="http://camel.apache.org/schema/blueprint/cxf"
       xsi:schemaLocation="
            http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
            http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0 http://aries.apache.org/schemas/blueprint-cm/blueprint-cm-1.1.0.xsd
            http://cxf.apache.org/blueprint/jaxrs http://cxf.apache.org/schemas/blueprint/jaxrs.xsd
            http://cxf.apache.org/blueprint/core http://cxf.apache.org/schemas/blueprint/core.xsd
            http://cxf.apache.org/transports/http-jetty/configuration http://cxf.apache.org/schemas/configuration/http-jetty.xsd
            http://cxf.apache.org/transports/http/configuration http://cxf.apache.org/schemas/configuration/http-conf.xsd
            http://cxf.apache.org/configuration/security http://cxf.apache.org/schemas/configuration/security.xsd
            http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd
            http://camel.apache.org/schema/blueprint/cxf http://camel.apache.org/schema/blueprint/cxf/camel-cxf.xsd
       ">
 

  <httpj:engine-factory bus="cxf">
   <httpj:engine port="9081">
    <httpj:tlsServerParameters>
      <sec:keyManagers keyPassword="skpass">
           <sec:keyStore type="JKS" password="sspass"
                resource="keystore/serviceKeystore.jks"/>
      </sec:keyManagers>
      <sec:trustManagers>
          <sec:keyStore type="JKS" password="sspass"
               resource="keystore/serviceKeystore.jks"/>
      </sec:trustManagers>
      <sec:cipherSuitesFilter>
        <sec:include>.*_EXPORT_.*</sec:include>
        <sec:include>.*_EXPORT1024_.*</sec:include>
        <sec:include>.*_WITH_DES_.*</sec:include>
        <sec:include>.*_WITH_AES_.*</sec:include>
        <sec:include>.*_WITH_NULL_.*</sec:include>
        <sec:exclude>.*_DH_anon_.*</sec:exclude>
      </sec:cipherSuitesFilter>
      <sec:clientAuthentication want="false" required="false"/>
    </httpj:tlsServerParameters>
   </httpj:engine>
  </httpj:engine-factory>

<!--
  <http:conduit name="https://localhost:9081/CxfRsService/rest/.*">
        <http:client ConnectionTimeout="3000000" ReceiveTimeout="3000000"/>
        <http:tlsClientParameters disableCNCheck="true">
            <sec:keyManagers keyPassword="ckpass">
                <sec:keyStore resource="keystore/clientKeystore.jks" password="cspass" type="JKS"/>
            </sec:keyManagers>
            <sec:trustManagers>
                <sec:keyStore file="keystore/clientKeystore.jks" password="cspass" type="JKS"/>
            </sec:trustManagers>
        </http:tlsClientParameters>
    </http:conduit>
-->

  <!-- Defined the mock service  -->

  <jaxrs:server id="restService"
                address="https://localhost:9081/CxfRsService/rest" 
                staticSubresourceResolution="true">
    <jaxrs:serviceBeans>
      <ref component-id="customerService"/>
    </jaxrs:serviceBeans>
    <jaxrs:providers>
      <bean class="org.codehaus.jackson.jaxrs.JacksonJsonProvider"/>
    </jaxrs:providers>
  </jaxrs:server>

   
  <!-- bean that implements the RESTful web service exposed by the jaxrs:server -->

  <bean id="customerService" class="org.apache.camel.component.cxf.jaxrs.testbean.CustomerService" />

    
  <!-- Defined the server endpoint to create the cxf-rs consumer -->
<!--
  <camelcxf:rsServer id="rsServer" address="http://localhost:9080/CxfRsProxy/route"
    serviceClass="org.apache.camel.component.cxf.jaxrs.testbean.CustomerService" 
    loggingFeatureEnabled="true" loggingSizeLimit="20" />
-->
 
  <!-- Defined the client endpoint to create the cxf-rs consumer -->
<!--
  <camelcxf:rsClient id="rsClient" address="https://localhost:9081/CxfRsService/rest"
    serviceClass="org.apache.camel.component.cxf.jaxrs.testbean.CustomerService"
    loggingFeatureEnabled="true" />
-->

   
  <!-- The camel route context -->
<!--
  <camelContext id="camel" xmlns="http://camel.apache.org/schema/blueprint">
    <route>
       <from uri="cxfrs://bean://rsServer"/>
       <from uri="timer://foo?delay=10s&amp;repeatCount=1" />
       <setHeader headerName="CamelHttpMethod">
           <constant>GET</constant>
       </setHeader>
       <setHeader headerName="CamelHttpPath">
           <constant>/customerservice/customers/123</constant>
       </setHeader>
       <setHeader headerName="Accept">
           <constant>application/customer+xml</constant>
       </setHeader>
       <to uri="cxfrs://bean://rsClient"/>
    </route>
  </camelContext>
-->

</blueprint>
